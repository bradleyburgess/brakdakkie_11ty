/*
 *    Moving to non-flex layout required using some clever
 *    margin-bottom, calc() and clamp()
 *    
 *    First, calculate the minimum heigh for layout. I used the iPhone SE
 *    for mobile, and ~620px for desktop layout.
 *
 *    Then figure out the maximum height for layout.
 *
 *   After that, it's a simple case of figuring out what the difference
 *   is between the min and max height, and converting that to a percentage
 *   based on vh.
 */

.home-container {
  $iphone-se-height: 41.6875rem;
  $desktop-min-height: 38.75rem;
  @include breakpoint-down(small) {
    margin-top: max(0rem, calc((100vh - $iphone-se-height) * 0.12));
  }
  @include breakpoint-up(medium) {
    margin-top: max(0rem, calc((100vh - $desktop-min-height) * 0.22));
  }
  & > *:not(:last-child) {
    margin-bottom: clamp(1.875rem, calc(6vh + ((100vh - $iphone-se-height) * 0.15)), 8.5rem);
    // margin-bottom: max(1.875rem, calc(6vh + ((100vh - $iphone-se-height) * 0.15)));
  }
  & > * {
    margin-inline: auto;
    text-align: center;
  }
  color: var(--white);
  a {
    text-decoration: none;
    color: inherit;
  }
}

.site-tagline {
  max-width: 40rem;
  text-align: center;
  padding-inline: 1rem;
  font-size: clamp(var(--size5), 2vw, 1.9375rem);
  line-height: 1.5em;
  font-weight: 600;
  em {
    font-family: var(--font-cursive);
    font-size: 1.05em;
    margin-right: 0.35em;
    padding-bottom: 0.5px;
  }
}

.reviews {
  display: grid;
  row-gap: 3rem;
  @include breakpoint-down(small) {
    padding-inline: 2rem;
    width: 100%;
  }
  @include breakpoint-up(medium) {
    width: 100%;
    max-width: 60rem;
    grid-template-columns: 1fr 1fr;
    column-gap: 3rem;
  }
}

.rating {
  display: flex;
  justify-content: center;
  align-items: flex-start;
  font-family: var(--font-sans);
  &__stars {
    display: flex;
    justify-content: center;
    gap: 0.25rem;
    margin-bottom: 0.5em;
    @include breakpoint-up(medium) {
      margin-top: 0.375rem;
    }
  }
  &__star {
    opacity: 0;
    $animation-duration: 400ms;
    animation-name: fadeIn;
    animation-duration: $animation-duration;
    animation-timing-function: ease-in-out;
    animation-direction: forwards;
    animation-fill-mode: forwards;
    width: 1rem;
    height: auto;
    @for $i from 1 through 5 {
      &:nth-of-type(#{$i}) {
        animation-delay: calc($animation-duration * $i);
      }
    }
  }
  &__text {
    font-size: var(--size-small);
    text-align: center;
    text-transform: uppercase;
    word-spacing: 0.15em;
  }
}

.quotes {
  &__list {
    display: grid;
    grid-template-areas: 'main';
    margin: 0;
    padding: 0;
    list-style-type: none;
  }
  &__list-item {
    grid-area: main;
    text-align: center;
    opacity: 0;
    // visibility: hidden;
    animation-duration: 500ms;
    animation-timing-function: ease-in-out;
    animation-direction: forwards;
    animation-fill-mode: forwards;
    a {
      max-width: 20rem;
    }
    &.active {
      animation-name: fadeIn;
      z-index: 10;
    }
    &.inactive {
      animation-name: fadeOut;
    }
  }
  &__buttons-container {
    .no-js & {
      display: none;
    }
    display: flex;
    justify-content: center;
    gap: 1rem;
    margin-bottom: 0.75rem;
  }
  &__button {
    box-sizing: border-box;
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;
    width: 2rem;
    height: 2rem;
    aspect-ratio: 1;
    margin-bottom: 1px;
    padding: 0.6rem;
    background: none;
    border: 0.0625rem solid var(--white);
    border-radius: 50%;
    color: inherit;
    cursor: pointer;
    transition: background-color 150ms ease-in-out;
    &:hover,
    &:focus {
      background-color: var(--white);
      img {
        filter: invert(50%);
      }
    }
    img {
      width: 100%;
      height: auto;
      transition: filter 150ms ease-in-out;
    }
  }
  text-align: center;
  height: 3.5rem;
  &__text {
    display: block;
    margin-bottom: 0.15em;
    font-size: 0.85em;
    line-height: 1.5;
  }
  &__author {
    font-style: normal;
    font-size: var(--size-small);
    &::before {
      content: '\2014';
      margin-right: 0.35em;
    }
  }
}

#play-pause {
  img {
    position: absolute;
    width: 0.75rem;
    visibility: hidden;
    opacity: 0;
    transition: all 100ms ease-in-out;
    &.active {
      opacity: 1;
      visibility: visible;
    }
    &:nth-of-type(2) {
      left: calc(50% - 0.275rem);
    }
  }
}
